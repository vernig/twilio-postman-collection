{
  "components": {
    "schemas": {
      "messaging.v1.service": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "area_code_geomatch": {
            "type": "boolean"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "fallback_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "fallback_to_long_code": {
            "type": "boolean"
          },
          "fallback_url": {
            "format": "uri",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "inbound_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "inbound_request_url": {
            "format": "uri",
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "mms_converter": {
            "type": "boolean"
          },
          "scan_message_content": {
            "enum": [
              "inherit",
              "enable",
              "disable"
            ],
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "smart_encoding": {
            "type": "boolean"
          },
          "status_callback": {
            "format": "uri",
            "type": "string"
          },
          "sticky_sender": {
            "type": "boolean"
          },
          "synchronous_validation": {
            "type": "boolean"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "validity_period": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "messaging.v1.service.alpha_sender": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "alpha_sender": {
            "type": "string"
          },
          "capabilities": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AI[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "messaging.v1.service.phone_number": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "capabilities": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "country_code": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^PN[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "messaging.v1.service.short_code": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "capabilities": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "country_code": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "short_code": {
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^SC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "messaging.v1.session": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "messaging_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "messaging.v1.session.session_message": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "index": {
            "type": "integer"
          },
          "messaging_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "session_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "messaging.v1.session.session_participant": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "messaging_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "session_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "twilio_address": {
            "type": "string"
          },
          "type": {
            "enum": [
              "chat",
              "sms"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "user_address": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "messaging.v1.session.session_scoped_webhook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "configuration": {
            "type": "object"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "session_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "messaging.v1.session_webhook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "post_webhook_retry_count": {
            "type": "integer"
          },
          "post_webhook_url": {
            "type": "string"
          },
          "pre_webhook_retry_count": {
            "type": "integer"
          },
          "pre_webhook_url": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "target": {
            "enum": [
              "webhook",
              "flex"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "webhook_filters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "webhook_method": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio Messaging REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Services": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL we should call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled.",
            "in": "query",
            "name": "InboundRequestUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `inbound_request_url`. Can be `GET` or `POST` and the default is `POST`.",
            "in": "query",
            "name": "InboundMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL that we should call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL.",
            "in": "query",
            "name": "FallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `fallback_url`. Can be: `GET` or `POST`.",
            "in": "query",
            "name": "FallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable [Sticky Sender](https://www.twilio.com/docs/sms/services#sticky-sender) on the Service instance.",
            "in": "query",
            "name": "StickySender",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable the [MMS Converter](https://www.twilio.com/docs/sms/services#mms-converter) for messages sent through the Service instance.",
            "in": "query",
            "name": "MmsConverter",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable [Smart Encoding](https://www.twilio.com/docs/sms/services#smart-encoding) for messages sent through the Service instance.",
            "in": "query",
            "name": "SmartEncoding",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Reserved.",
            "in": "query",
            "name": "ScanMessageContent",
            "required": false,
            "schema": {
              "enum": [
                "inherit",
                "enable",
                "disable"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to enable [Fallback to Long Code](https://www.twilio.com/docs/sms/services#fallback-to-long-code) for messages sent through the Service instance.",
            "in": "query",
            "name": "FallbackToLongCode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/sms/services#area-code-geomatch) on the Service Instance.",
            "in": "query",
            "name": "AreaCodeGeomatch",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`.",
            "in": "query",
            "name": "ValidityPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Reserved.",
            "in": "query",
            "name": "SynchronousValidation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/AlphaSenders": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "alpha_senders": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service.alpha_sender"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Alphanumeric Sender ID string. Can be up to 11 characters long. Valid characters are A-Z, a-z, 0-9, space, and hyphen `-`. This value cannot contain only numbers.",
            "in": "query",
            "name": "AlphaSender",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.alpha_sender"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "alpha_sender"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/AlphaSenders/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the AlphaSender resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the AlphaSender resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.alpha_sender"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "alpha_sender"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/PhoneNumbers": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service.phone_number"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Phone Number being added to the Service.",
            "in": "query",
            "name": "PhoneNumberSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "country_code"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/PhoneNumbers/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the PhoneNumber resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the PhoneNumber resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "country_code"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{ServiceSid}/ShortCodes": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to read the resources from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "short_codes": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.service.short_code"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the resource under.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the ShortCode resource being added to the Service.",
            "in": "query",
            "name": "ShortCodeSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.short_code"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "short_code",
        "country_code"
      ],
      "x-path-type": "list"
    },
    "/v1/Services/{ServiceSid}/ShortCodes/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to delete the resource from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the ShortCode resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to fetch the resource from.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the ShortCode resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service.short_code"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "short_code",
        "country_code"
      ],
      "x-path-type": "instance"
    },
    "/v1/Services/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Service resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Service resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Service resource to update.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL we should call using `inbound_method` when a message is received by any phone number or short code in the Service. When this property is `null`, receiving inbound messages is disabled.",
            "in": "query",
            "name": "InboundRequestUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `inbound_request_url`. Can be `GET` or `POST` and the default is `POST`.",
            "in": "query",
            "name": "InboundMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL that we should call using `fallback_method` if an error occurs while retrieving or executing the TwiML from the Inbound Request URL.",
            "in": "query",
            "name": "FallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `fallback_url`. Can be: `GET` or `POST`.",
            "in": "query",
            "name": "FallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to [pass status updates](https://www.twilio.com/docs/sms/api/message-resource#message-status-values) about message delivery.",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable [Sticky Sender](https://www.twilio.com/docs/sms/services#sticky-sender) on the Service instance.",
            "in": "query",
            "name": "StickySender",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable the [MMS Converter](https://www.twilio.com/docs/sms/services#mms-converter) for messages sent through the Service instance.",
            "in": "query",
            "name": "MmsConverter",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable [Smart Encoding](https://www.twilio.com/docs/sms/services#smart-encoding) for messages sent through the Service instance.",
            "in": "query",
            "name": "SmartEncoding",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Reserved.",
            "in": "query",
            "name": "ScanMessageContent",
            "required": false,
            "schema": {
              "enum": [
                "inherit",
                "enable",
                "disable"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to enable [Fallback to Long Code](https://www.twilio.com/docs/sms/services#fallback-to-long-code) for messages sent through the Service instance.",
            "in": "query",
            "name": "FallbackToLongCode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable [Area Code Geomatch](https://www.twilio.com/docs/sms/services#area-code-geomatch) on the Service Instance.",
            "in": "query",
            "name": "AreaCodeGeomatch",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "How long, in seconds, messages sent from the Service are valid. Can be an integer from `1` to `14,400`.",
            "in": "query",
            "name": "ValidityPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Reserved.",
            "in": "query",
            "name": "SynchronousValidation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Sessions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "sessions": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.session"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) the session belongs to.",
            "in": "query",
            "name": "MessagingServiceSid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A JSON string that stores application-specific data.",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The Identity of the session's creator. If the Session was created through the API, the value will be `system`",
            "in": "query",
            "name": "CreatedBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Sessions/Webhooks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The HTTP method to use when sending a webhook request.",
            "in": "query",
            "name": "WebhookMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The list of webhook event triggers that are enabled for the Service.",
            "in": "query",
            "name": "WebhookFilters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The absolute URL of the pre-event webhook.",
            "in": "query",
            "name": "PreWebhookUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The absolute URL of the post-event webhook.",
            "in": "query",
            "name": "PostWebhookUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of times to try the pre-event webhook request if the first attempt fails. Can be up to 3 and the default is 0.",
            "in": "query",
            "name": "PreWebhookRetryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The number of times to try the post-event webhook request if the first attempt fails. Can be up to 3 and the default is 0.",
            "in": "query",
            "name": "PostWebhookRetryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The routing target of the webhook. Can be ordinary or routed internally to Flex",
            "in": "query",
            "name": "Target",
            "required": false,
            "schema": {
              "enum": [
                "webhook",
                "flex"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "target",
        "webhook_method",
        "pre_webhook_url",
        "post_webhook_url"
      ],
      "x-path-type": "instance"
    },
    "/v1/Sessions/{SessionSid}/Messages": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the messages to read.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messages": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.session.session_message"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session for the message.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The [identity](https://www.twilio.com/docs/chat/identity) of the message's author. Defaults to `system`.",
            "in": "query",
            "name": "Author",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A JSON string that stores application-specific data.",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The message body.",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "index",
        "author",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Sessions/{SessionSid}/Messages/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the message to delete.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SessionMessage resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the message to fetch.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SessionMessage resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the message to update.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SessionMessage resource to update.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The [identity](https://www.twilio.com/docs/chat/identity) of the message's author. Defaults to `system`.",
            "in": "query",
            "name": "Author",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A JSON string that stores application-specific data.",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The message body.",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "index",
        "author",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Sessions/{SessionSid}/Participants": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the participants to read.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "participants": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.session.session_participant"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session for the participant.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A JSON string that stores application-specific data.",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of the Twilio phone number, WhatsApp number, or Messenger Page ID that the participant is in contact with. This field, together with user_address, is only null when the participant is interacting from a Chat endpoint (see the 'identity' field).",
            "in": "query",
            "name": "TwilioAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. This is used when importing messages from another system, as the provided value will be trusted and displayed on SDK clients.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated. This is used when importing messages from another system, as the provided value will be trusted and displayed on SDK clients.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The application-defined string that uniquely identifies the [Chat User](https://www.twilio.com/docs/chat/rest/user-resource) as the session participant. This parameter is null unless the participant is using the Programmable Chat SDK to communicate.",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of the participant's device. Can be a phone number or Messenger ID. Together with the Twilio Address, this determines a participant uniquely. This field (with twilio_address) is null when the participant is interacting from a Chat endpoint (see the `identity` field).",
            "in": "query",
            "name": "UserAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "twilio_address",
        "user_address",
        "type"
      ],
      "x-path-type": "list"
    },
    "/v1/Sessions/{SessionSid}/Participants/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the participant to delete.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SessionParticipant resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the participant to fetch.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SessionParticipant resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the participant to update.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SessionParticipant resource to update.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A JSON string that stores application-specific data.",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. This is used when importing messages from another system, as the provided value will be trusted and displayed on SDK clients.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "twilio_address",
        "user_address",
        "type"
      ],
      "x-path-type": "instance"
    },
    "/v1/Sessions/{SessionSid}/Webhooks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the Webhook resources to read.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "How many resources to return in each list page. The default is 50, and the maximum is 1000.",
            "in": "query",
            "name": "PageSize",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "webhooks": {
                      "items": {
                        "$ref": "#/components/schemas/messaging.v1.session.session_scoped_webhook"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session for the webhook.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The target of the webhook.",
            "in": "query",
            "name": "Target",
            "required": true,
            "schema": {
              "enum": [
                "webhook",
                "trigger",
                "studio"
              ],
              "type": "string"
            }
          },
          {
            "description": "The absolute URL the webhook request should be sent to.",
            "in": "query",
            "name": "Configuration.Url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use when sending a webhook request to `url`. Can be `POST` or `GET`.",
            "in": "query",
            "name": "Configuration.Method",
            "required": false,
            "schema": {
              "enum": [
                "GET",
                "POST"
              ],
              "type": "string"
            }
          },
          {
            "description": "The list of events that trigger a webhook event for the Session.",
            "in": "query",
            "name": "Configuration.Filters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The list of keywords, firing webhook event for the Session.",
            "in": "query",
            "name": "Configuration.Triggers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The SID of the studio flow where the webhook should be sent to.",
            "in": "query",
            "name": "Configuration.FlowSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The number of times to call the webhook request if the first attempt fails. Can be up to 3 and the default is 0.",
            "in": "query",
            "name": "Configuration.RetryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The message index for which and its successors the webhook will be replayed. Not set by default.",
            "in": "query",
            "name": "Configuration.ReplayAfter",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether buffering should be applied to messages. Not set by default.",
            "in": "query",
            "name": "Configuration.BufferMessages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The period to buffer messages in milliseconds. Default is 3,000 ms.",
            "in": "query",
            "name": "Configuration.BufferWindow",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_scoped_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "target"
      ],
      "x-path-type": "list"
    },
    "/v1/Sessions/{SessionSid}/Webhooks/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the Webhook resource to delete.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SessionScopedWebhook resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session with the Webhook resource to fetch.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_scoped_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session for the webhook.",
            "in": "path",
            "name": "SessionSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the resource to update.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The absolute URL the webhook request should be sent to.",
            "in": "query",
            "name": "Configuration.Url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use when sending a webhook request to `url`. Can be `POST` or `GET`.",
            "in": "query",
            "name": "Configuration.Method",
            "required": false,
            "schema": {
              "enum": [
                "GET",
                "POST"
              ],
              "type": "string"
            }
          },
          {
            "description": "The list of events that trigger a webhook event for the Session.",
            "in": "query",
            "name": "Configuration.Filters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The list of keywords that trigger a webhook event for the Session.",
            "in": "query",
            "name": "Configuration.Triggers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The SID of the studio flow where the webhook should be sent to.",
            "in": "query",
            "name": "Configuration.FlowSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The number of times to try the webhook request if the first attempt fails. Can be up to 3 and the default is 0.",
            "in": "query",
            "name": "Configuration.RetryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether buffering should be applied to messages. Not set by default.",
            "in": "query",
            "name": "Configuration.BufferMessages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The period to buffer messages in milliseconds. Default is 3,000 ms.",
            "in": "query",
            "name": "Configuration.BufferWindow",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session.session_scoped_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "target"
      ],
      "x-path-type": "instance"
    },
    "/v1/Sessions/{Sid}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "description": "The SID of the Session resource to update.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A descriptive string that you create to describe the resource. It can be up to 64 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A JSON string that stores application-specific data.",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The Identity of the session's creator. If the Session was created through the API, the value will be `system`",
            "in": "query",
            "name": "CreatedBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messaging.v1.session"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://messaging.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution.",
      "name": "Beta"
    },
    {
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
      "name": "Preview"
    }
  ]
}